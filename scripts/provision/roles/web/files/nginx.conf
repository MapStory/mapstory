server_tokens off;

server {

listen 80;
listen [::]:80;
listen 443 default_server ssl;

server_name {{ nginx_server_name }};

ssl_certificate /etc/nginx/certs/{{ ssl_crt }};
ssl_certificate_key /etc/nginx/certs/{{ ssl_key }};
ssl_protocols TLSv1 TLSv1.1 TLSv1.2;


{% if not development_server|bool %}
if ($scheme = http) {
    return 301 https://$server_name$request_uri;
}
{% endif %}

root /var/www;

{% if allowed_hosts is defined %}
# Deny illegal Host headers
if ($host !~* ^({{allowed_hosts|join('|')}})$ ) {
    return 444;
}
{% endif %}


# serve staticfiles
location /static/ {
{% if development_server|bool %}
sendfile        off;
{% endif %}
gzip            on;
gzip_types      text/css application/x-javascript application/x-font-ttf;
alias {{ project_path }}/{{ project_name }}/static_root/;
}

# serve mediafiles, default 'uploaded' in GeoNode
location /uploaded/ {
alias {{ media_root }};
}

# geoserver proxy
location /geoserver/ {
proxy_pass http://127.0.0.1:8080/geoserver/;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header Host $http_host;
}

# gunicorn wsgi proxy
location / {
client_max_body_size {{ nginx_client_max_body_size }};
proxy_pass_header Server;
proxy_set_header Host $http_host;
proxy_redirect off;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Scheme $scheme;
proxy_set_header X-Forwarded-Proto $scheme;
proxy_connect_timeout 90s;
proxy_read_timeout 90s;
proxy_pass http://127.0.0.1:8000/;
gzip            on;
gzip_types  text/html text/xml application/json;
}

}