---

- name: install java8
  apt_repository: repo='ppa:openjdk-r/ppa'

- name: Install Geoserver Dependencies
  apt: name={{item}} state=present update_cache=yes cache_valid_time=3600
  with_items:
    - tomcat7
    # needed if we're not pulling in tomcat
    - openjdk-8-jdk
  tags: [install]

- file: path=/tmp/{{ application_name }} state=directory
  tags: [setup, geoserver]

- name: make geoserver dirs
  file: path=/var/lib/geoserver/geoserver state=directory
  tags: [geoserver]

- name: geogig global config
  copy: src=roles/geo/files/geogigconfig dest=/usr/share/tomcat7/.geogigconfig mode=0775 owner=tomcat7 group=tomcat7
  tags: [setup]

- name: fetch geoserver
  get_url: url={{ geoserver_download }} dest=/tmp/{{ application_name }}
  tags: [geoserver]

- name: db client settings
  template: src=roles/geo/files/geoserver.xml dest=/etc/tomcat7/Catalina/localhost/geoserver.xml mode=0700 owner=tomcat7 group=tomcat7
  tags: [geoserver]

- name: copy geoserver.war to tomcat webapps
  shell: cp /tmp/{{ application_name }}/geoserver.war /var/lib/tomcat7/webapps/geoserver.war
  notify: restart geoserver
  tags: [geoserver]

- name: update geoserver perms
  file: path=/var/lib/tomcat7/webapps/geoserver.war state=file owner=tomcat7 group=tomcat7
  notify: restart geoserver

- name: restart tomcat
  service: name=tomcat7 state=restarted
  tags: [geoserver]

- wait_for: path=/var/lib/tomcat7/webapps/geoserver/WEB-INF/

- name: copy geoserver web.xml
  template: src=roles/geo/files/web.xml dest=/var/lib/tomcat7/webapps/geoserver/WEB-INF/web.xml owner=tomcat7 group=tomcat7
  tags: [geoserver]

- name: copy tomcat context settings
  template: src=roles/geo/files/context.xml dest=/var/lib/tomcat7/conf/context.xml mode=0700 owner=tomcat7 group=tomcat7
  tags: [setup]

- stat: path=/var/lib/tomcat7/webapps/geoserver/WEB-INF/lib/postgresql-9.4-1201-jdbc41.jar
  register: postgresql_source
  tags: [geoserver]

- stat: path=/usr/share/tomcat7/lib/postgresql-9.4-1201-jdbc41.jar
  register: postgresql_target
  tags: [geoserver]

- name: move postgresql-9.4-1201-jdbc41.jar
  command: mv /var/lib/tomcat7/webapps/geoserver/WEB-INF/lib/postgresql-9.4-1201-jdbc41.jar /usr/share/tomcat7/lib/
  sudo: yes
  when: postgresql_source.stat.exists and not postgresql_target.stat.exists
  tags: [geoserver]

#- name: copy geoserver wps classify libs
#  shell: sudo unzip -j -o classify.zip "*.jar" -d {{ geoserver_lib_dir }} && sudo chown -R tomcat7:tomcat7 {{ geoserver_lib_dir }} chdir=/tmp/{{ application_name }}/geoserver
#  notify: restart geoserver
#  tags: [geoserver, wps]

- name: geogig global config
  copy: src=roles/geo/files/geogigconfig dest=/var/lib/geoserver/geoserver/.geogigconfig mode=0775 owner=tomcat7 group=tomcat7
  tags: [geoserver, geogig]

- name: unpack geoserver datadir
  shell: "[ ! -e {{ geoserver_data }} ] && unzip /tmp/{{ application_name }}/geoserver.war data/* -d /var/lib/geoserver/ || exit 0"
  tags: [geoserver]

- name: copy geoserver config.xml
  template: src=roles/geo/files/config.xml dest={{ geoserver_data }}/security/config.xml owner=tomcat7 group=tomcat7
  tags: [geoserver]

- name: copy geoserver rest.properties
  template: src=roles/geo/files/rest.properties dest={{ geoserver_data }}/security/rest.properties owner=tomcat7 group=tomcat7
  tags: [geoserver]

- name: default styles
  copy: src=roles/geo/files/{{item}} dest={{ geoserver_data }}/styles mode=0775 owner=tomcat7 group=tomcat7
  with_items:
    - default_generic.sld
    - default_line.sld
    - default_point.sld
    - default_polygon.sld
  tags: [geoserver, styles]

- name: update java home
  lineinfile: 'dest=/etc/default/tomcat7 regexp="^JAVA_HOME" line="JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/jre"'
  tags: [geoserver]

- name: update java opts
  lineinfile: 'dest=/etc/default/tomcat7 regexp="^JAVA_OPTS" line="JAVA_OPTS=\"-Djava.awt.headless=true -Xmx{{ansible_memtotal_mb//2}}m -XX:+UseConcMarkSweepGC\""'
  tags: [geoserver]

- name: set geoserver password
  lineinfile: dest={{ geoserver_data }}/security/usergroup/default/users.xml regexp='(.*)crypt1:.*("/>)$' line='\1plain:{{geoserver_password}}\2' backrefs=yes
  tags: [geoserver]

- name: geoserver datadir permissions
  file: path={{ geoserver_data }} state=directory owner=tomcat7 group=tomcat7 mode=775 recurse=yes
  tags: [geoserver]

- name: create geogit data directory
  file: path={{ geoserver_data }}/geogig state=directory mode=0775 owner=tomcat7 group=tomcat7
  tags: [setup]

- file: path=/tmp/{{ application_name }} state=absent
  tags: [setup, geoserver]

