# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.box = "ubuntu/trusty"

  config.vm.box_url = "https://cloud-images.ubuntu.com/vagrant/trusty/current/trusty-server-cloudimg-amd64-vagrant-disk1.box"

  # When explicitly defining a VM, the name used replaces the token 'default'.
  config.vm.define "mapstory"


  # Enable if you want to use the git repo from your host machine.
  #config.vm.synced_folder "../../../", "/srv/git/mapstory", mount_options: ["dmode=777,fmode=777"]

  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.scope = :box
    config.cache.synced_folder_opts = {
      type: :nfs,
      mount_options: ['rw', 'vers=4', 'tcp', 'nolock']
    }
  end

  config.vm.provision "ansible" do |ansible|
    ansible.sudo = true
    ansible.host_key_checking = false
    ansible.inventory_path = "inventory.ini"
    ansible.playbook = "main.yml"

    # As of Vagrant 1.5, the machine name (taken from config.vm.define) is set as default limit to ensure
    # that vagrant provision steps only affect the expected machine. Setting ansible.limit will override this default.

    # Setting ansible.limit = 'all' can be used to make Ansible connect to all machines from the inventory file.

    # Enable if config.vm.define is not defined above or is not set to a name found in the inventory file.

    ansible.limit = "mapstory"

    #ansible.verbose = "vvv"

  end

  config.vm.provider :virtualbox do |vb|
    vb.customize ["modifyvm", :id, "--memory", "2048"]
    vb.customize ["modifyvm", :id, "--cpus", "2"]
    vb.customize ["modifyvm", :id, "--ioapic", "on"]
  end

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network :private_network, ip: "192.168.56.151"

end
