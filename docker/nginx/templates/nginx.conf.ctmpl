user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  main;

  sendfile        on;
  #tcp_nopush     on;

  keepalive_timeout 65;

  #gzip  on;

  server {

    listen 80;
    listen [::]:80;
    listen 443 default_server ssl;

    server_name {{ env "PUBLIC_HOST" }};

    ssl_certificate {{ env "SSL_CERT" }};
    ssl_certificate_key {{ env "SSL_KEY" }};
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    if ($scheme = http) {
      return 301 https://{{ env "PUBLIC_HOST" }}$request_uri;
    }

    root /var/www;

    #{% if allowed_hosts is defined %}
    # Deny illegal Host headers
    #if ($host !~* ^({{ env "ALLOWED_HOSTS" }})$ ) {
    #  return 444;
    #}
    #{% endif %}

    # serve staticfiles
    location /static/ {
      gzip            on;
      #gzip_types      text/css application/x-javascript application/x-font-ttf;
      gzip_types *;
      alias {{ env "STATIC_ROOT" }}/;
    }

    # serve mediafiles, default 'uploaded' in GeoNode
    location /uploaded/ {
      alias {{ env "MEDIA_ROOT" }}/;
    }

    # geoserver proxy
    location /geoserver/ {
      proxy_pass http://geoserver:8080/geoserver/;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      proxy_redirect off;
    }

    # wsgi proxy
    location / {
      client_max_body_size {{ env "NGINX_CLIENT_MAX_BODY_SIZE" }};
      proxy_pass_header Server;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_connect_timeout 90s;
      proxy_read_timeout 90s;
      proxy_pass http://django:8000/;
      gzip on;
      #gzip_types text/html text/xml application/json;
      gzip_types *;
    }
  }
}
